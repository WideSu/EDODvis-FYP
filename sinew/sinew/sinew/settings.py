"""
Django settings for sinew project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEFAULT_FROM_EMAIL = 'webmaster@example.com'

ALLOWED_HOSTS = ['127.0.0.1'] # os.environ.get('HOSTS')

CORS_ALLOW_HEADERS = ['*']

CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_CREDENTIALS = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework_api_key',
    'main',
    'edodvis'
]


API_KEY_CUSTOM_HEADER = "HTTP_X_API_KEY"


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware'
]

ROOT_URLCONF = 'sinew.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION = 'sinew.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': "django.db.backends.postgresql",
        'NAME': 'postgres', # os.environ.get('DATABASE_NAME'),
        'USER': 'postgres', #os.environ.get('DATABASE_USER'),
        'PASSWORD': "123456",# os.environ.get('DATABASE_PASSWORD'),
        'HOST': os.environ.get('HOST'),
        'PORT': 5432 # os.environ.get('PORT')
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-US'

TIME_ZONE = 'Asia/Singapore'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt': "%d %b %Y %H:%M:%S"
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'device': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '../sinew/edodvis/logs/device.log',
            'formatter': 'verbose',
            'backupCount': 5,  # keep at most 10 log files
            'maxBytes': 5242880,  # 5*1024*1024 bytes (5MB)
        },
        'participant': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '../sinew/edodvis/logs/participant.log',
            'formatter': 'verbose',
            'backupCount': 5,  # keep at most 10 log files
            'maxBytes': 5242880,  # 5*1024*1024 bytes (5MB)
        },
        'sensorreading': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '../sinew/edodvis/logs/sensorreading.log',
            'formatter': 'verbose',
            'backupCount': 5,  # keep at most 10 log files
            'maxBytes': 5242880,  # 5*1024*1024 bytes (5MB)
        },
        'user': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '../sinew/edodvis/logs/user.log',
            'formatter': 'verbose',
            'backupCount': 5,  # keep at most 10 log files
            'maxBytes': 5242880,  # 5*1024*1024 bytes (5MB)
        },
        'utils': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '../sinew/edodvis/logs/utils.log',
            'formatter': 'verbose',
            'backupCount': 5,  # keep at most 10 log files
            'maxBytes': 5242880,  # 5*1024*1024 bytes (5MB)
        },
        'task': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '../sinew/edodvis/logs/task.log',
            'formatter': 'verbose',
            'backupCount': 5,  # keep at most 10 log files
            'maxBytes': 5242880,  # 5*1024*1024 bytes (5MB)
        },
        'migration': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '../sinew/edodvis/logs/migration.log',
            'formatter': 'verbose',
            'backupCount': 5,  # keep at most 10 log files
            'maxBytes': 5242880,  # 5*1024*1024 bytes (5MB)
        },
    },
    'loggers': {
        'edodvis.views.device': {
            'handlers': ['device'],
            'level': 'DEBUG',  # lowest level so it can access all error tiers
            'propagate': True,
        },
        'edodvis.views.participant': {
            'handlers': ['participant'],
            'level': 'DEBUG',  # lowest level so it can access all error tiers
            'propagate': True,
        },
        'edodvis.views.sensorreading': {
            'handlers': ['sensorreading'],
            'level': 'DEBUG',  # lowest level so it can access all error tiers
            'propagate': True,
        },
        'edodvis.views.user': {
            'handlers': ['user'],
            'level': 'DEBUG',  # lowest level so it can access all error tiers
            'propagate': True,
        },
        'edodvis.views.utils': {
            'handlers': ['utils'],
            'level': 'DEBUG',  # lowest level so it can access all error tiers
            'propagate': True,
        },
        'edodvis.services.task': {
            'handlers': ['task'],
            'level': 'DEBUG',  # lowest level so it can access all error tiers
            'propagate': True,
        },
        'edodvis.services.migration': {
            'handlers': ['migration'],
            'level': 'DEBUG',  # lowest level so it can access all error tiers
            'propagate': True,
        },
    },
}
